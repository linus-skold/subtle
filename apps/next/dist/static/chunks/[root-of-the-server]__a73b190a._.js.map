{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_e531dabc.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_e531dabc-module__QGiZLq__className\",\n  \"variable\": \"geist_e531dabc-module__QGiZLq__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_e531dabc.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist%22,%22arguments%22:[{%22variable%22:%22--font-geist-sans%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistSans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist', 'Geist Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,wJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,wJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,wJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_68a01160.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_mono_68a01160-module__YLcDdW__className\",\n  \"variable\": \"geist_mono_68a01160-module__YLcDdW__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_68a01160.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist_Mono%22,%22arguments%22:[{%22variable%22:%22--font-geist-mono%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistMono%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist Mono', 'Geist Mono Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,6JAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,6JAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,6JAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["file:///home/linus/Development/electron-subtle-todo/apps/next/src/context/AppContext.tsx"],"sourcesContent":["import { createContext, useContext, useState } from \"react\";\n\nimport { z } from \"zod\";\n\nexport const AppSettingsSchema = z.object({\n  alwaysOnTop: z.boolean().default(false),\n  autoStart: z.boolean().default(false),\n  autoStartOnLogin: z.boolean().default(false),\n});\n\nconst defaultAppSettings = {\n  alwaysOnTop: false,\n  autoStart: false,\n  autoStartOnLogin: false,\n};\n\nexport const AppStateSchema = z.object({\n  isFocusMode: z.boolean().default(false),\n  isCompactMode: z.boolean().default(false),\n  isSettingsModalOpen: z.boolean().default(false),\n  isTaskContextOpen: z.boolean().default(false),\n  appSettings: AppSettingsSchema,\n});\n\nexport type AppState = z.infer<typeof AppStateSchema>;\nexport const PartialAppStateSchema = AppStateSchema.partial();\nexport type PartialAppState = z.infer<typeof PartialAppStateSchema>;\n\nconst AppStateDefault: AppState = {\n  isFocusMode: false,\n  isCompactMode: false,\n  isSettingsModalOpen: false,\n  isTaskContextOpen: false,\n  appSettings: defaultAppSettings,\n};\n\nexport interface AppContextType {\n  state: AppState;\n  updateState: (newState: PartialAppState) => void;\n  updateAppSettings: (newSettings: PartialAppState[\"appSettings\"]) => void;\n}\n\nconst AppContext = createContext<AppContextType>({\n  state: AppStateDefault,\n  updateState: () => {\n    throw new Error(\"updateState function not implemented\");\n  },\n  updateAppSettings: () => {\n    throw new Error(\"updateAppSettings function not implemented\");\n  },\n});\n\nexport const AppProvider = ({ children }: { children: React.ReactNode }) => {\n  const [state, setState] = useState<AppState>(AppStateDefault);\n\n  const updateState = (newState: PartialAppState) => {\n    const parsedState = PartialAppStateSchema.parse(newState);\n    setState((prevState) => ({\n      ...prevState,\n      ...parsedState,\n    }));\n  };\n\n  const updateAppSettings = (newSettings: PartialAppState[\"appSettings\"]) => {\n    const parsedSettings = AppSettingsSchema.parse(newSettings);\n    setState((prevState) => ({\n      ...prevState,\n      appSettings: {\n        ...prevState.appSettings,\n        ...parsedSettings,\n      },\n    }));\n  };\n\n  return (\n    <AppContext.Provider value={{ state, updateState, updateAppSettings }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useAppContext = () => useContext(AppContext);\n"],"names":[],"mappings":";;;;;;;;AAAA;AAEA;AAAA;;;;;AAEO,MAAM,oBAAoB,sOAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxC,aAAa,sOAAA,CAAA,IAAC,CAAC,OAAO,GAAG,OAAO,CAAC;IACjC,WAAW,sOAAA,CAAA,IAAC,CAAC,OAAO,GAAG,OAAO,CAAC;IAC/B,kBAAkB,sOAAA,CAAA,IAAC,CAAC,OAAO,GAAG,OAAO,CAAC;AACxC;AAEA,MAAM,qBAAqB;IACzB,aAAa;IACb,WAAW;IACX,kBAAkB;AACpB;AAEO,MAAM,iBAAiB,sOAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACrC,aAAa,sOAAA,CAAA,IAAC,CAAC,OAAO,GAAG,OAAO,CAAC;IACjC,eAAe,sOAAA,CAAA,IAAC,CAAC,OAAO,GAAG,OAAO,CAAC;IACnC,qBAAqB,sOAAA,CAAA,IAAC,CAAC,OAAO,GAAG,OAAO,CAAC;IACzC,mBAAmB,sOAAA,CAAA,IAAC,CAAC,OAAO,GAAG,OAAO,CAAC;IACvC,aAAa;AACf;AAGO,MAAM,wBAAwB,eAAe,OAAO;AAG3D,MAAM,kBAA4B;IAChC,aAAa;IACb,eAAe;IACf,qBAAqB;IACrB,mBAAmB;IACnB,aAAa;AACf;AAQA,MAAM,2BAAa,CAAA,GAAA,8TAAA,CAAA,gBAAa,AAAD,EAAkB;IAC/C,OAAO;IACP,aAAa;QACX,MAAM,IAAI,MAAM;IAClB;IACA,mBAAmB;QACjB,MAAM,IAAI,MAAM;IAClB;AACF;AAEO,MAAM,cAAc,CAAC,EAAE,QAAQ,EAAiC;;IACrE,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,8TAAA,CAAA,WAAQ,AAAD,EAAY;IAE7C,MAAM,cAAc,CAAC;QACnB,MAAM,cAAc,sBAAsB,KAAK,CAAC;QAChD,SAAS,CAAC,YAAc,CAAC;gBACvB,GAAG,SAAS;gBACZ,GAAG,WAAW;YAChB,CAAC;IACH;IAEA,MAAM,oBAAoB,CAAC;QACzB,MAAM,iBAAiB,kBAAkB,KAAK,CAAC;QAC/C,SAAS,CAAC,YAAc,CAAC;gBACvB,GAAG,SAAS;gBACZ,aAAa;oBACX,GAAG,UAAU,WAAW;oBACxB,GAAG,cAAc;gBACnB;YACF,CAAC;IACH;IAEA,qBACE,8VAAC,WAAW,QAAQ;QAAC,OAAO;YAAE;YAAO;YAAa;QAAkB;kBACjE;;;;;;AAGP;GA3Ba;KAAA;AA6BN,MAAM,gBAAgB;;IAAM,OAAA,CAAA,GAAA,8TAAA,CAAA,aAAU,AAAD,EAAE;AAAU;IAA3C","debugId":null}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":["file:///home/linus/Development/electron-subtle-todo/apps/next/src/context/TaskContext.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-empty-function */\n\nimport type React from \"react\";\nimport { createContext, useContext, useState } from \"react\";\n\n\n\ntype TaskService = {\n  loadTasks: () => Promise<Task[]>;\n  addTask: (task: TaskInsert) => Promise<{ lastInsertId: number }>;\n  deleteTask: (taskId: number) => Promise<void>;\n  updateTask: (task: Task) => Promise<void>;\n  getSubtasksByParentId: (taskId: number) => Promise<Subtask[]>;\n  addSubtask: (subtask: SubtaskInsert) => Promise<void>;\n  updateSubtask: (subtask: PartialSubtask) => Promise<void>;\n  deleteSubtask: (subtaskId: number) => Promise<void>;\n};\n\n\nexport interface TaskContextType {\n  tasks: Task[];\n  setTasks: React.Dispatch<React.SetStateAction<Task[]>>;\n  activeTask: number | null;\n  setActiveTask: React.Dispatch<React.SetStateAction<number | null>>;\n  taskService?: TaskService;\n}\n\nconst TaskContext = createContext<TaskContextType>({\n  tasks: [],\n  setTasks: () => {},\n  activeTask: null,\n  setActiveTask: () => {},\n  taskService: undefined,\n});\n\nexport const TaskProvider = ({ children }: { children: React.ReactNode }) => {\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [activeTask, setActiveTask] = useState<number | null>(null);\n\n  return (\n    <TaskContext.Provider\n      value={{\n    \n      }}\n    >\n      {children}\n    </TaskContext.Provider>\n  );\n};\n\nexport const useTasks = () => useContext(TaskContext);\n"],"names":[],"mappings":"AAAA,uDAAuD;;;;;AAGvD;;;;AAwBA,MAAM,4BAAc,CAAA,GAAA,8TAAA,CAAA,gBAAa,AAAD,EAAmB;IACjD,OAAO,EAAE;IACT,UAAU,KAAO;IACjB,YAAY;IACZ,eAAe,KAAO;IACtB,aAAa;AACf;AAEO,MAAM,eAAe,CAAC,EAAE,QAAQ,EAAiC;;IACtE,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,8TAAA,CAAA,WAAQ,AAAD,EAAU,EAAE;IAC7C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,8TAAA,CAAA,WAAQ,AAAD,EAAiB;IAE5D,qBACE,8VAAC,YAAY,QAAQ;QACnB,OAAO,CAEP;kBAEC;;;;;;AAGP;GAba;KAAA;AAeN,MAAM,WAAW;;IAAM,OAAA,CAAA,GAAA,8TAAA,CAAA,aAAU,AAAD,EAAE;AAAW;IAAvC","debugId":null}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":["file:///home/linus/Development/electron-subtle-todo/apps/next/src/app/layout.tsx"],"sourcesContent":["\"use client\";\nimport { Geist, Geist_Mono } from \"next/font/google\";\nimport \"@/styles/globals.css\";\nimport { AppProvider } from \"../context/AppContext\";\nimport { TaskProvider } from \"../context/TaskContext\";\n\nconst geistSans = Geist({\n  variable: \"--font-geist-sans\",\n  subsets: [\"latin\"],\n});\n\nconst geistMono = Geist_Mono({\n  variable: \"--font-geist-mono\",\n  subsets: [\"latin\"],\n});\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\">\n      <body\n        className={`${geistSans.variable} ${geistMono.variable} antialiased`}\n      >\n        <AppProvider>\n          <TaskProvider>{children}</TaskProvider>\n        </AppProvider>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;;AAGA;AACA;AAJA;;;;;;;AAgBe,SAAS,WAAW,EACjC,QAAQ,EAGR;IACA,qBACE,8VAAC;QAAK,MAAK;kBACT,cAAA,8VAAC;YACC,WAAW,GAAG,4IAAA,CAAA,UAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,iJAAA,CAAA,UAAS,CAAC,QAAQ,CAAC,YAAY,CAAC;sBAEpE,cAAA,8VAAC,gJAAA,CAAA,cAAW;0BACV,cAAA,8VAAC,iJAAA,CAAA,eAAY;8BAAE;;;;;;;;;;;;;;;;;;;;;AAKzB;KAhBwB","debugId":null}}]
}