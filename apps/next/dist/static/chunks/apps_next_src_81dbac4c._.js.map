{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/linus/Development/electron-subtle-todo/apps/next/src/utils/time.utils.ts"],"sourcesContent":["export const parseEstimate = (estimate: string) => {\n  if (estimate.includes(\"h\")) {\n    const parts = estimate.split(\"h\");\n    const hours = Number.parseInt(parts[0], 10);\n    if (estimate.includes(\"m\")) {\n      const minutes = Number.parseInt(parts[1].replace(\"m\", \"\"), 10);\n      return hours * 60 + minutes;\n    }\n\n    const minutes = Number.parseInt(parts[1], 10);\n    return hours * 60 + minutes;\n  }\n\n  const parts = estimate.split(\":\");\n  if (parts.length === 2) {\n    const hours = Number.parseInt(parts[0], 10);\n    const minutes = Number.parseInt(parts[1], 10);\n    return hours * 60 + minutes;\n  }\n};\n\nexport const formatEstimate = (estimate: number) => {\n  if (!estimate) {\n    return \"-\";\n  }\n  //convert from seconds to hours and minutes\n  const hours = Math.floor(estimate / 3600);\n  const minutes = Math.floor((estimate % 3600) / 60);\n  // Write as 1h30m\n\n  if (estimate > 3600) {\n    return `${hours}hr ${minutes}min`;\n  }\n\n  return `${minutes}min`;\n};\n\nexport const formatProgress = (progress: number) => {\n  const hours = Math.floor(progress / 3600);\n  const minutes = Math.floor((progress % 3600) / 60);\n  const seconds = Math.floor((progress % 3600) % 60);\n\n  const format = (unit: number) => (unit < 10 ? `0${unit}` : `${unit}`);\n\n  if (progress > 3600) {\n    return `${format(hours)}:${format(minutes)}:${format(seconds)}`;\n  }\n\n  return `${format(minutes)}:${format(seconds)}`;\n};\n"],"names":[],"mappings":";;;;;AAAO,MAAM,gBAAgB,CAAC;IAC5B,IAAI,SAAS,QAAQ,CAAC,MAAM;QAC1B,MAAM,QAAQ,SAAS,KAAK,CAAC;QAC7B,MAAM,QAAQ,OAAO,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE;QACxC,IAAI,SAAS,QAAQ,CAAC,MAAM;YAC1B,MAAM,UAAU,OAAO,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,KAAK;YAC3D,OAAO,QAAQ,KAAK;QACtB;QAEA,MAAM,UAAU,OAAO,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE;QAC1C,OAAO,QAAQ,KAAK;IACtB;IAEA,MAAM,QAAQ,SAAS,KAAK,CAAC;IAC7B,IAAI,MAAM,MAAM,KAAK,GAAG;QACtB,MAAM,QAAQ,OAAO,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE;QACxC,MAAM,UAAU,OAAO,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE;QAC1C,OAAO,QAAQ,KAAK;IACtB;AACF;AAEO,MAAM,iBAAiB,CAAC;IAC7B,IAAI,CAAC,UAAU;QACb,OAAO;IACT;IACA,2CAA2C;IAC3C,MAAM,QAAQ,KAAK,KAAK,CAAC,WAAW;IACpC,MAAM,UAAU,KAAK,KAAK,CAAC,AAAC,WAAW,OAAQ;IAC/C,iBAAiB;IAEjB,IAAI,WAAW,MAAM;QACnB,OAAO,GAAG,MAAM,GAAG,EAAE,QAAQ,GAAG,CAAC;IACnC;IAEA,OAAO,GAAG,QAAQ,GAAG,CAAC;AACxB;AAEO,MAAM,iBAAiB,CAAC;IAC7B,MAAM,QAAQ,KAAK,KAAK,CAAC,WAAW;IACpC,MAAM,UAAU,KAAK,KAAK,CAAC,AAAC,WAAW,OAAQ;IAC/C,MAAM,UAAU,KAAK,KAAK,CAAC,AAAC,WAAW,OAAQ;IAE/C,MAAM,SAAS,CAAC,OAAkB,OAAO,KAAK,CAAC,CAAC,EAAE,MAAM,GAAG,GAAG,MAAM;IAEpE,IAAI,WAAW,MAAM;QACnB,OAAO,GAAG,OAAO,OAAO,CAAC,EAAE,OAAO,SAAS,CAAC,EAAE,OAAO,UAAU;IACjE;IAEA,OAAO,GAAG,OAAO,SAAS,CAAC,EAAE,OAAO,UAAU;AAChD","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///home/linus/Development/electron-subtle-todo/apps/next/src/components/Link.tsx"],"sourcesContent":["import { ArrowTopRightOnSquareIcon } from \"@heroicons/react/24/outline\";\n\nconst Link = ({\n  href,\n  children,\n  className,\n}: { href: string; children?: React.ReactNode; className?: string }) => {\n  const handleClick = (e: React.MouseEvent<HTMLAnchorElement>) => {\n    e.preventDefault();\n    // openUrl(href).catch((error: unknown) => {\n    //   console.error(\"Failed to open URL:\", error);\n    // });\n  };\n  return (\n    <a\n      href={href}\n      onClick={handleClick}\n      className={`relative inline-flex items-start text-blue-500 hover:underline ${className}`}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <span className=\"inline-block pr-4 relative\">\n        {children}\n        <ArrowTopRightOnSquareIcon className=\"absolute top-[1px] right-0 h-3 w-3\" />\n      </span>\n    </a>\n  );\n};\nexport default Link;\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,MAAM,OAAO,CAAC,EACZ,IAAI,EACJ,QAAQ,EACR,SAAS,EACwD;IACjE,MAAM,cAAc,CAAC;QACnB,EAAE,cAAc;IAChB,4CAA4C;IAC5C,iDAAiD;IACjD,MAAM;IACR;IACA,qBACE,8VAAC;QACC,MAAM;QACN,SAAS;QACT,WAAW,CAAC,+DAA+D,EAAE,WAAW;QACxF,QAAO;QACP,KAAI;kBAEJ,cAAA,8VAAC;YAAK,WAAU;;gBACb;8BACD,8VAAC,2UAAA,CAAA,4BAAyB;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAI7C;KAzBM;uCA0BS","debugId":null}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file:///home/linus/Development/electron-subtle-todo/apps/next/src/components/SubtaskComponent.tsx"],"sourcesContent":["import { useTasks } from \"../context/TaskContext\";\nimport type { Subtask } from \"../../../types/subtask.types\";\nimport { CheckCircleIcon, TrashIcon } from \"@heroicons/react/24/outline\";\nimport { CheckCircleIcon as CheckCircleIconFilled } from \"@heroicons/react/24/solid\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nconst SubtaskComponent = ({\n  subtask,\n  onChange,\n}: { subtask: Subtask; onChange?: () => void }) => {\n  const { updateSubtask, removeSubtask } = useTasks();\n\n  const [isCompleted, setIsCompleted] = useState<boolean>(false);\n  const isActive = useRef(false);\n\n  useEffect(() => {\n    if (isActive && subtask) {\n      setIsCompleted(subtask.completed);\n    }\n  }, [subtask]);\n\n  useEffect(() => {\n    if (!isActive.current) {\n      isActive.current = true;\n      return;\n    }\n\n    updateSubtask(\n      {\n        ...subtask,\n        completed: isCompleted,\n      },\n      onChange,\n    );\n  }, [isCompleted, updateSubtask, subtask, onChange]);\n\n  return (\n    <div className=\"flex items-center justify-between space-x-2 z-20\">\n      <div className=\"flex items-center space-x-2\">\n        {!isCompleted && (\n          <CheckCircleIcon\n            className=\"h-4 w-4 text-gray-400 hover:text-green-400\"\n            onClick={() => setIsCompleted(true)}\n          />\n        )}\n        {isCompleted && (\n          <CheckCircleIconFilled\n            className=\"h-4 w-4 text-green-400\"\n            onClick={() => setIsCompleted(false)}\n          />\n        )}\n\n        <span\n          className={`text-sm ${isCompleted ? \"line-through text-gray-500\" : \"\"}`}\n        >\n          {subtask.subtask_name}\n        </span>\n      </div>\n\n      <TrashIcon\n        className=\"h-4 w-4 text-gray-400 hover:text-red-400 cursor-pointer\"\n        onClick={() => removeSubtask(subtask.id, onChange)}\n      />\n    </div>\n  );\n};\nexport default SubtaskComponent;\n"],"names":[],"mappings":";;;;AAAA;AAEA;AAAA;AACA;AACA;;;;;;;AAEA,MAAM,mBAAmB,CAAC,EACxB,OAAO,EACP,QAAQ,EACoC;;IAC5C,MAAM,EAAE,aAAa,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,iJAAA,CAAA,WAAQ,AAAD;IAEhD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,8TAAA,CAAA,WAAQ,AAAD,EAAW;IACxD,MAAM,WAAW,CAAA,GAAA,8TAAA,CAAA,SAAM,AAAD,EAAE;IAExB,CAAA,GAAA,8TAAA,CAAA,YAAS,AAAD;sCAAE;YACR,IAAI,YAAY,SAAS;gBACvB,eAAe,QAAQ,SAAS;YAClC;QACF;qCAAG;QAAC;KAAQ;IAEZ,CAAA,GAAA,8TAAA,CAAA,YAAS,AAAD;sCAAE;YACR,IAAI,CAAC,SAAS,OAAO,EAAE;gBACrB,SAAS,OAAO,GAAG;gBACnB;YACF;YAEA,cACE;gBACE,GAAG,OAAO;gBACV,WAAW;YACb,GACA;QAEJ;qCAAG;QAAC;QAAa;QAAe;QAAS;KAAS;IAElD,qBACE,8VAAC;QAAI,WAAU;;0BACb,8VAAC;gBAAI,WAAU;;oBACZ,CAAC,6BACA,8VAAC,uTAAA,CAAA,kBAAe;wBACd,WAAU;wBACV,SAAS,IAAM,eAAe;;;;;;oBAGjC,6BACC,8VAAC,qTAAA,CAAA,kBAAqB;wBACpB,WAAU;wBACV,SAAS,IAAM,eAAe;;;;;;kCAIlC,8VAAC;wBACC,WAAW,CAAC,QAAQ,EAAE,cAAc,+BAA+B,IAAI;kCAEtE,QAAQ,YAAY;;;;;;;;;;;;0BAIzB,8VAAC,2SAAA,CAAA,YAAS;gBACR,WAAU;gBACV,SAAS,IAAM,cAAc,QAAQ,EAAE,EAAE;;;;;;;;;;;;AAIjD;GA3DM;;QAIqC,iJAAA,CAAA,WAAQ;;;KAJ7C;uCA4DS","debugId":null}},
    {"offset": {"line": 233, "column": 0}, "map": {"version":3,"sources":["file:///home/linus/Development/electron-subtle-todo/apps/next/src/components/DonutProgressBar.tsx"],"sourcesContent":["import React from \"react\";\n\nconst DonutProgressBar = ({ progress, size = 48, strokeWidth = 5 }: { progress: number; size?: number; strokeWidth?: number }) => {\n  const radius = (size - strokeWidth) / 2;\n  const circumference = 2 * Math.PI * radius;\n  const strokeDashoffset = circumference - (progress / 100) * circumference;\n\n  return (\n    <div className=\"flex items-center justify-center\">\n      <svg className=\"transform -rotate-90\" width={size} height={size}>\n        <defs>\n          <linearGradient id=\"grad\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n            <stop offset=\"0%\" stopColor=\"#2b7fff\" />\n            <stop offset=\"100%\" stopColor=\"#05df72\" />\n          </linearGradient>\n        </defs>\n        {/* Background circle */}\n        <circle\n          className=\"text-gray-900\"\n          stroke=\"currentColor\"\n          fill=\"transparent\"\n          strokeWidth={strokeWidth}\n          r={radius}\n          cx={size / 2}\n          cy={size / 2}\n        />\n        {/* Progress circle */}\n        <circle\n          className=\"text-green-400 border border-green-100 transition-all duration-500\"\n          stroke=\"url(#grad)\"\n          fill=\"transparent\"\n          strokeWidth={strokeWidth}\n          strokeDasharray={circumference}\n          strokeDashoffset={strokeDashoffset}\n          strokeLinecap=\"round\"\n          r={radius}\n          cx={size / 2}\n          cy={size / 2}\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport default DonutProgressBar;\n"],"names":[],"mappings":";;;;;AAEA,MAAM,mBAAmB,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,EAAE,cAAc,CAAC,EAA6D;IAC3H,MAAM,SAAS,CAAC,OAAO,WAAW,IAAI;IACtC,MAAM,gBAAgB,IAAI,KAAK,EAAE,GAAG;IACpC,MAAM,mBAAmB,gBAAgB,AAAC,WAAW,MAAO;IAE5D,qBACE,8VAAC;QAAI,WAAU;kBACb,cAAA,8VAAC;YAAI,WAAU;YAAuB,OAAO;YAAM,QAAQ;;8BACzD,8VAAC;8BACC,cAAA,8VAAC;wBAAe,IAAG;wBAAO,IAAG;wBAAK,IAAG;wBAAK,IAAG;wBAAO,IAAG;;0CACrD,8VAAC;gCAAK,QAAO;gCAAK,WAAU;;;;;;0CAC5B,8VAAC;gCAAK,QAAO;gCAAO,WAAU;;;;;;;;;;;;;;;;;8BAIlC,8VAAC;oBACC,WAAU;oBACV,QAAO;oBACP,MAAK;oBACL,aAAa;oBACb,GAAG;oBACH,IAAI,OAAO;oBACX,IAAI,OAAO;;;;;;8BAGb,8VAAC;oBACC,WAAU;oBACV,QAAO;oBACP,MAAK;oBACL,aAAa;oBACb,iBAAiB;oBACjB,kBAAkB;oBAClB,eAAc;oBACd,GAAG;oBACH,IAAI,OAAO;oBACX,IAAI,OAAO;;;;;;;;;;;;;;;;;AAKrB;KAxCM;uCA0CS","debugId":null}},
    {"offset": {"line": 338, "column": 0}, "map": {"version":3,"sources":["file:///home/linus/Development/electron-subtle-todo/apps/next/src/components/InputComponent.tsx"],"sourcesContent":["import type React from \"react\";\nimport { useState } from \"react\";\n\ninterface InputComponentProps<T = unknown> {\n  placeholder?: string;\n  value?: string;\n  onChange?: (value: string) => void;\n  onKeyDown?: (e: React.KeyboardEvent<HTMLInputElement>, value: T) => void;\n  show: boolean;\n  onClose?: () => void;\n}\n\nconst InputComponent = <T,>({\n  placeholder,\n  onKeyDown,\n  show,\n  onClose,\n}: InputComponentProps<T>) => {\n  const [value, setValue] = useState<string>(\"\");\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === \"Enter\") {\n      onKeyDown?.(e, value as unknown as T);\n      setValue(\"\");\n    }\n    if (e.key === \"Escape\") {\n      setValue(\"\");\n      onClose?.();\n    }\n  };\n\n  if (!show) {\n    return <></>;\n  }\n\n  return (\n    <div className=\"p-[2px] subtle-gradient-shift bg-gradient-to-r from-green-400 to-blue-500 rounded-lg relative\">\n      <input\n        type=\"text\"\n        onKeyDown={handleKeyDown}\n        onChange={(e) => setValue(e.target.value)}\n        placeholder={placeholder ?? \"\"}\n        value={value}\n        className=\"focus:outline-none rounded-md p-2 w-full bg-gray-800 placeholder:text-sm\"\n      />\n      <button\n        type=\"button\"\n        className=\"absolute right-4 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600\"\n        onClick={() => {\n          setValue(\"\");\n          onClose?.();\n        }}\n      >\n        X\n      </button>\n    </div>\n  );\n};\n\nexport default InputComponent;\n"],"names":[],"mappings":";;;;AACA;;;;AAWA,MAAM,iBAAiB,CAAK,EAC1B,WAAW,EACX,SAAS,EACT,IAAI,EACJ,OAAO,EACgB;;IACvB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,8TAAA,CAAA,WAAQ,AAAD,EAAU;IAE3C,MAAM,gBAAgB,CAAC;QACrB,IAAI,EAAE,GAAG,KAAK,SAAS;YACrB,YAAY,GAAG;YACf,SAAS;QACX;QACA,IAAI,EAAE,GAAG,KAAK,UAAU;YACtB,SAAS;YACT;QACF;IACF;IAEA,IAAI,CAAC,MAAM;QACT,qBAAO;IACT;IAEA,qBACE,8VAAC;QAAI,WAAU;;0BACb,8VAAC;gBACC,MAAK;gBACL,WAAW;gBACX,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;gBACxC,aAAa,eAAe;gBAC5B,OAAO;gBACP,WAAU;;;;;;0BAEZ,8VAAC;gBACC,MAAK;gBACL,WAAU;gBACV,SAAS;oBACP,SAAS;oBACT;gBACF;0BACD;;;;;;;;;;;;AAKP;GA7CM;KAAA;uCA+CS","debugId":null}},
    {"offset": {"line": 411, "column": 0}, "map": {"version":3,"sources":["file:///home/linus/Development/electron-subtle-todo/apps/next/src/components/SubtasksBlock.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport SubtaskComponent from \"./SubtaskComponent\";\nimport type { Subtask } from \"../../../types/subtask.types\";\nimport { ChevronDownIcon } from \"@heroicons/react/24/outline\";\nimport ProgressDonut from \"./DonutProgressBar\";\nimport InputComponent from \"./InputComponent\";\n\nimport { useTasks } from \"../context/TaskContext\";\n\nconst SubtasksBlock = ({\n  subtasks,\n  parentId,\n  onSubtaskChange,\n  show,\n  expanded,\n}: {\n  subtasks: Subtask[];\n  parentId: number;\n  onSubtaskChange: () => void;\n  show?: boolean;\n  expanded?: boolean;\n}) => {\n  const [subtasksOpen, setSubtasksOpen] = useState(expanded ?? false);\n\n  const { addSubtask } = useTasks();\n\n  const [addingSubtasks, setAddingSubtasks] = useState(expanded ?? false);\n\n  const completedTasks = subtasks?.filter((task) => task.completed);\n  const completedTasksCount = completedTasks ? completedTasks.length : 0;\n\n  const progress = subtasks?.length\n    ? (100 * completedTasksCount) / subtasks.length\n    : 0;\n  if (!show) {\n    return <></>;\n  }\n\n  return (\n    <div className=\"\">\n      <hr className=\"w-full bg-gray-700 h-1 rounded-lg mt-2\" />\n      <div className=\"relative flex justify-between items-center mt-2 z-20\">\n        <div className=\"flex items-center space-x-2\">\n          <ProgressDonut progress={progress} size={24} />\n          <p className=\"text-center text-gray-400 text-sm ml-2\">\n            {completedTasksCount}/{subtasks.length}\n          </p>\n          <p\n            className=\"text-sm font-bold hover:text-green-400 cursor-pointer\"\n            onClick={() => {\n              setAddingSubtasks(!addingSubtasks);\n              setSubtasksOpen(true);\n            }}\n          >\n            +\n          </p>\n        </div>\n        <ChevronDownIcon\n          className={`h-4 w-4 text-gray-400 hover:text-green-400 inline-block mr-1 ${subtasksOpen ? \"rotate-180\" : \"\"}`}\n          onClick={() => setSubtasksOpen(!subtasksOpen)}\n        />\n      </div>\n      {subtasksOpen && (\n        <div className=\"z-20 relative flex flex-col mt-2\">\n          <InputComponent<string>\n            onKeyDown={(_, value) => {\n              // add new subtask to database and tell parent to update\n              addSubtask(\n                parentId,\n                {\n                  subtask_name: value,\n                  completed: false,\n                  parent_task_id: parentId,\n                },\n                () => {\n                  onSubtaskChange();\n                },\n              );\n            }}\n            show={addingSubtasks}\n            onClose={() => {\n              setAddingSubtasks(false);\n            }}\n          />\n\n          <div\n            className={`flex flex-col space-y-2 mt-2 transition-opacity duration-200 ${subtasksOpen ? \"block\" : \"hidden\"}`}\n          >\n            {subtasks?.map((subtask) => (\n              <SubtaskComponent\n                key={subtask.id}\n                subtask={subtask}\n                onChange={() => {\n                  onSubtaskChange();\n                }}\n              />\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SubtasksBlock;\n"],"names":[],"mappings":";;;;AAAA;AAEA;AAEA;AACA;AACA;AAEA;;;;;;;;;AAEA,MAAM,gBAAgB,CAAC,EACrB,QAAQ,EACR,QAAQ,EACR,eAAe,EACf,IAAI,EACJ,QAAQ,EAOT;;IACC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,8TAAA,CAAA,WAAQ,AAAD,EAAE,YAAY;IAE7D,MAAM,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,iJAAA,CAAA,WAAQ,AAAD;IAE9B,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,8TAAA,CAAA,WAAQ,AAAD,EAAE,YAAY;IAEjE,MAAM,iBAAiB,UAAU,OAAO,CAAC,OAAS,KAAK,SAAS;IAChE,MAAM,sBAAsB,iBAAiB,eAAe,MAAM,GAAG;IAErE,MAAM,WAAW,UAAU,SACvB,AAAC,MAAM,sBAAuB,SAAS,MAAM,GAC7C;IACJ,IAAI,CAAC,MAAM;QACT,qBAAO;IACT;IAEA,qBACE,8VAAC;QAAI,WAAU;;0BACb,8VAAC;gBAAG,WAAU;;;;;;0BACd,8VAAC;gBAAI,WAAU;;kCACb,8VAAC;wBAAI,WAAU;;0CACb,8VAAC,yJAAA,CAAA,UAAa;gCAAC,UAAU;gCAAU,MAAM;;;;;;0CACzC,8VAAC;gCAAE,WAAU;;oCACV;oCAAoB;oCAAE,SAAS,MAAM;;;;;;;0CAExC,8VAAC;gCACC,WAAU;gCACV,SAAS;oCACP,kBAAkB,CAAC;oCACnB,gBAAgB;gCAClB;0CACD;;;;;;;;;;;;kCAIH,8VAAC,uTAAA,CAAA,kBAAe;wBACd,WAAW,CAAC,6DAA6D,EAAE,eAAe,eAAe,IAAI;wBAC7G,SAAS,IAAM,gBAAgB,CAAC;;;;;;;;;;;;YAGnC,8BACC,8VAAC;gBAAI,WAAU;;kCACb,8VAAC,uJAAA,CAAA,UAAc;wBACb,WAAW,CAAC,GAAG;4BACb,wDAAwD;4BACxD,WACE,UACA;gCACE,cAAc;gCACd,WAAW;gCACX,gBAAgB;4BAClB,GACA;gCACE;4BACF;wBAEJ;wBACA,MAAM;wBACN,SAAS;4BACP,kBAAkB;wBACpB;;;;;;kCAGF,8VAAC;wBACC,WAAW,CAAC,6DAA6D,EAAE,eAAe,UAAU,UAAU;kCAE7G,UAAU,IAAI,CAAC,wBACd,8VAAC,yJAAA,CAAA,UAAgB;gCAEf,SAAS;gCACT,UAAU;oCACR;gCACF;+BAJK,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;AAY/B;GA7FM;;QAemB,iJAAA,CAAA,WAAQ;;;KAf3B;uCA+FS","debugId":null}},
    {"offset": {"line": 579, "column": 0}, "map": {"version":3,"sources":["file:///home/linus/Development/electron-subtle-todo/apps/next/src/components/EditTask.tsx"],"sourcesContent":["import { useTasks } from \"../context/TaskContext\";\nimport type { Subtask } from \"../../../types/subtask.types\";\nimport type { PartialTask, Task } from \"../../../types/task.types\";\nimport { Dialog, DialogPanel } from \"@headlessui/react\";\nimport { XCircleIcon } from \"@heroicons/react/24/outline\";\nimport { useEffect, useRef, useState } from \"react\";\nimport Link from \"./Link\";\nimport SubtasksBlock from \"./SubtasksBlock\";\n\nconst EditTask = (props: {\n  task: Task;\n  open: boolean;\n  onClick: (v: boolean) => void;\n  onChange?: ({\n    taskData,\n    subtaskData,\n  }: {\n    taskData?: PartialTask;\n    subtaskData?: Subtask[];\n  }) => void;\n  subtasks?: Subtask[];\n}) => {\n  const { open, onClick, onChange } = props;\n  const [task, setTask] = useState<Task>();\n  const [subtasksState, setSubtasks] = useState<Subtask[]>([]);\n  const { getSubtasksByTaskId } = useTasks();\n  const wasOpen = useRef(false);\n\n  useEffect(() => {\n    if (!open || wasOpen.current) return;\n    if (open && props.subtasks) {\n      setSubtasks(props.subtasks);\n    }\n    if (open && props.task) {\n      setTask(props.task);\n    }\n    if (open && !wasOpen.current) {\n      wasOpen.current = true;\n    }\n  }, [open, props.subtasks, props.task]);\n\n  const onClose = () => {\n    onClick(false);\n    onChange?.({ subtaskData: subtasksState, taskData: task });\n  };\n\n  const getUrlsFromText = (text: string): string[] => {\n    const urlRegex = /https?:\\/\\/[^\\s]+/g;\n    const urls = text.match(urlRegex);\n    return urls ?? [];\n  };\n\n  if (!task) {\n    return <></>;\n  }\n\n  return (\n    <Dialog\n      open={open}\n      as=\"div\"\n      className=\"fixed top-6 left-0 w-screen focus:outline-none flex min-h-full z-50\"\n      onClose={onClose}\n    >\n      <DialogPanel\n        transition\n        className=\"\n        w-full max-w-full bg-white/5 p-6 backdrop-blur-2xl \n        duration-300 ease-out data-closed:transform-[scale(95%)] data-closed:opacity-0\"\n      >\n        <div className=\"flex justify-between\">\n          <input\n            className=\"w-full focus:outline-hidden focus:border-green-400 border-b-2 border-gray-600\"\n            value={task.title}\n            onChange={(e) => {\n              setTask((prev) => {\n                if (prev) {\n                  return { ...prev, title: e.target.value };\n                }\n                return prev;\n              });\n            }}\n          />\n          <XCircleIcon\n            className=\"h-6 w-6 text-white text-gray-800 hover:text-gray-500 transition-colors\"\n            onClick={() => onClose()}\n          />\n        </div>\n        <textarea\n          className=\"w-full h-32 bg-gray-800 text-white p-2 rounded-lg mt-4\"\n          placeholder=\"Edit task description\"\n          value={task.description}\n          onChange={(e) => {\n            setTask((prev) => {\n              if (prev) {\n                return { ...prev, description: e.target.value };\n              }\n              return prev;\n            });\n          }}\n        />\n        <ul>\n          {getUrlsFromText(task?.description ?? \"\").map((url, index) => (\n            <li\n              key={`url-${index}-${url}`}\n              className=\"text-blue-400 hover:underline\"\n            >\n              <Link href={url}>{url}</Link>\n            </li>\n          ))}\n        </ul>\n\n        <SubtasksBlock\n          subtasks={subtasksState}\n          parentId={task.id}\n          onSubtaskChange={() => {\n            getSubtasksByTaskId(task.id)\n              .then((tasks) => {\n                setSubtasks(tasks);\n              })\n              .catch((err: unknown) => {\n                console.error(err);\n              });\n          }}\n          show={subtasksState !== null}\n          expanded={true}\n        />\n      </DialogPanel>\n    </Dialog>\n  );\n};\nexport default EditTask;\n"],"names":[],"mappings":";;;;AAAA;AAGA;AACA;AACA;AACA;AACA;;;;;;;;;AAEA,MAAM,WAAW,CAAC;;IAahB,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG;IACpC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,8TAAA,CAAA,WAAQ,AAAD;IAC/B,MAAM,CAAC,eAAe,YAAY,GAAG,CAAA,GAAA,8TAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IAC3D,MAAM,EAAE,mBAAmB,EAAE,GAAG,CAAA,GAAA,iJAAA,CAAA,WAAQ,AAAD;IACvC,MAAM,UAAU,CAAA,GAAA,8TAAA,CAAA,SAAM,AAAD,EAAE;IAEvB,CAAA,GAAA,8TAAA,CAAA,YAAS,AAAD;8BAAE;YACR,IAAI,CAAC,QAAQ,QAAQ,OAAO,EAAE;YAC9B,IAAI,QAAQ,MAAM,QAAQ,EAAE;gBAC1B,YAAY,MAAM,QAAQ;YAC5B;YACA,IAAI,QAAQ,MAAM,IAAI,EAAE;gBACtB,QAAQ,MAAM,IAAI;YACpB;YACA,IAAI,QAAQ,CAAC,QAAQ,OAAO,EAAE;gBAC5B,QAAQ,OAAO,GAAG;YACpB;QACF;6BAAG;QAAC;QAAM,MAAM,QAAQ;QAAE,MAAM,IAAI;KAAC;IAErC,MAAM,UAAU;QACd,QAAQ;QACR,WAAW;YAAE,aAAa;YAAe,UAAU;QAAK;IAC1D;IAEA,MAAM,kBAAkB,CAAC;QACvB,MAAM,WAAW;QACjB,MAAM,OAAO,KAAK,KAAK,CAAC;QACxB,OAAO,QAAQ,EAAE;IACnB;IAEA,IAAI,CAAC,MAAM;QACT,qBAAO;IACT;IAEA,qBACE,8VAAC,iUAAA,CAAA,SAAM;QACL,MAAM;QACN,IAAG;QACH,WAAU;QACV,SAAS;kBAET,cAAA,8VAAC,iUAAA,CAAA,cAAW;YACV,UAAU;YACV,WAAU;;8BAIV,8VAAC;oBAAI,WAAU;;sCACb,8VAAC;4BACC,WAAU;4BACV,OAAO,KAAK,KAAK;4BACjB,UAAU,CAAC;gCACT,QAAQ,CAAC;oCACP,IAAI,MAAM;wCACR,OAAO;4CAAE,GAAG,IAAI;4CAAE,OAAO,EAAE,MAAM,CAAC,KAAK;wCAAC;oCAC1C;oCACA,OAAO;gCACT;4BACF;;;;;;sCAEF,8VAAC,+SAAA,CAAA,cAAW;4BACV,WAAU;4BACV,SAAS,IAAM;;;;;;;;;;;;8BAGnB,8VAAC;oBACC,WAAU;oBACV,aAAY;oBACZ,OAAO,KAAK,WAAW;oBACvB,UAAU,CAAC;wBACT,QAAQ,CAAC;4BACP,IAAI,MAAM;gCACR,OAAO;oCAAE,GAAG,IAAI;oCAAE,aAAa,EAAE,MAAM,CAAC,KAAK;gCAAC;4BAChD;4BACA,OAAO;wBACT;oBACF;;;;;;8BAEF,8VAAC;8BACE,gBAAgB,MAAM,eAAe,IAAI,GAAG,CAAC,CAAC,KAAK,sBAClD,8VAAC;4BAEC,WAAU;sCAEV,cAAA,8VAAC,6IAAA,CAAA,UAAI;gCAAC,MAAM;0CAAM;;;;;;2BAHb,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,KAAK;;;;;;;;;;8BAQhC,8VAAC,sJAAA,CAAA,UAAa;oBACZ,UAAU;oBACV,UAAU,KAAK,EAAE;oBACjB,iBAAiB;wBACf,oBAAoB,KAAK,EAAE,EACxB,IAAI,CAAC,CAAC;4BACL,YAAY;wBACd,GACC,KAAK,CAAC,CAAC;4BACN,QAAQ,KAAK,CAAC;wBAChB;oBACJ;oBACA,MAAM,kBAAkB;oBACxB,UAAU;;;;;;;;;;;;;;;;;AAKpB;GAxHM;;QAgB4B,iJAAA,CAAA,WAAQ;;;KAhBpC;uCAyHS","debugId":null}},
    {"offset": {"line": 770, "column": 0}, "map": {"version":3,"sources":["file:///home/linus/Development/electron-subtle-todo/apps/next/src/components/ActiveTask.tsx"],"sourcesContent":["import { useTasks } from \"../context/TaskContext\";\nimport { type Task } from \"../../../types/task.types\";\nimport { formatProgress } from \"../utils/time.utils\";\nimport {\n  CheckCircleIcon,\n  DocumentTextIcon,\n  PauseIcon,\n  PlayIcon,\n} from \"@heroicons/react/24/outline\";\nimport { useEffect, useRef, useState } from \"react\";\nimport EditTask from \"./EditTask\";\nimport { Subtask } from \"../../../types/subtask.types\";\n\nconst ActiveTask = () => {\n  const [isHovered, setIsHovered] = useState(false);\n\n  const { activeTask, getTaskById, updateTask, setActiveTask } = useTasks();\n  const [isPaused, setIsPaused] = useState(false);\n  const [editTaskOpen, setEditTaskOpen] = useState(false);\n  const [subtasks, setSubtasks] = useState<Subtask[]>([]);\n  const intervalRef = useRef<number | null>(null);\n\n  const currentTask = useRef<Task | null>(null);\n\n  if(activeTask === null) {\n    return <></>;\n  }\n\n  if (activeTask !== null) {\n    currentTask.current = getTaskById(activeTask);\n  }\n\n  const [overtime, setOvertime] = useState(false);\n  const [taskTimer, setTaskTimer] = useState(0);\n\n  const taskTimerRef = useRef(0);\n  const overtimeRef = useRef(false);\n\n  const previousTaskId = useRef<number | null>(null);\n\n  useEffect(() => {\n    if (\n      previousTaskId.current !== null &&\n      previousTaskId.current !== activeTask\n    ) {\n      updateTask(previousTaskId.current, {\n        active: false,\n        overtime: overtimeRef.current,\n        progress: taskTimerRef.current,\n      });\n    }\n\n    if (activeTask !== null) {\n      updateTask(activeTask, {\n        active: true,\n      });\n\n      const current = getTaskById(activeTask);\n      if (!current) return;\n      const startingTimer =\n        current.progress > 0 ? current.progress : current.estimate;\n\n      setTaskTimer(startingTimer);\n      taskTimerRef.current = startingTimer;\n\n      const isOvertime = current.overtime;\n      setOvertime(isOvertime);\n      overtimeRef.current = isOvertime;\n    }\n\n    // dbHelper.subtask\n    //   .getSubtasksByParentId(activeTask)\n    //   .then((result) => {\n    //     setSubtasks(result);\n    //   })\n    //   .catch((error: unknown) => {\n    //     console.error(\"Error fetching subtasks:\", error);\n    //   });\n\n    previousTaskId.current = activeTask;\n  }, [activeTask, updateTask, getTaskById]);\n\n  useEffect(() => {\n    if (!isPaused) {\n      intervalRef.current = window.setInterval(() => {\n        setTaskTimer((prev) => {\n          let newTime = 0;\n\n          if (prev === 0 && !overtimeRef.current) {\n            setOvertime(true);\n            overtimeRef.current = true;\n            newTime = 0;\n          } else {\n            newTime = prev + (overtimeRef.current ? 1 : -1);\n          }\n\n          taskTimerRef.current = newTime;\n          return newTime;\n        });\n      }, 1000);\n    }\n\n    return () => clearInterval(intervalRef.current ?? 0);\n  }, [isPaused]);\n\n  const [isPausing, setIsPausing] = useState(false);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (isPausing) {\n        setIsPaused((prev) => !prev);\n        setIsPausing(false);\n      }\n    }, 600);\n\n    return () => clearTimeout(timeout);\n  }, [isPausing]);\n\n  return (\n    <div\n      className=\"font-bold text-xl my-2 min-h-[60px]\"\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n    >\n      <div className=\"p-[2px] min-h-[60px] subtle-gradient-shift bg-gradient-to-r from-green-400 to-blue-500 rounded-lg relative\">\n        <div className=\"bg-gray-800 rounded-lg relative\">\n          <div\n            className={`absolute top-0 left-0 w-full h-full flex justify-center items-center space-x-4 transition-opacity duration-200 ${\n              isHovered ? \"opacity-100\" : \"opacity-0 pointer-events-none\"\n            }`}\n          >\n            <DocumentTextIcon\n              className=\"h-5 w-5 text-gray-400 hover:text-blue-500 transition-colors\"\n              onClick={() => setEditTaskOpen(true)}\n            />\n            {isPaused && (\n              <PlayIcon\n                className={`h-5 w-5 text-gray-400 hover:text-green-500 ${isPausing ? \"animate-ping\" : \"\"}`}\n                onClick={() => setIsPausing(true)}\n              />\n            )}\n\n            {!isPaused && (\n              <PauseIcon\n                className={`h-5 w-5 text-gray-400 hover:text-yellow-500 ${isPausing ? \"animate-ping\" : \"\"}`}\n                onClick={() => setIsPausing(true)}\n              />\n            )}\n            {/* <PauseIcon className=\"h-5 w-5 text-gray-400 hover:text-yellow-500 transition-colors\" onClick={ () => setIsPaused(!isPaused)} /> */}\n\n            <CheckCircleIcon\n              className=\"h-5 w-5 text-gray-400 hover:text-green-500 transition-colors\"\n              onClick={() => {\n                if (currentTask.current?.id) {\n                  updateTask(currentTask.current.id, {\n                    completed: true,\n                    active: false,\n                    progress: taskTimer,\n                  });\n                  setActiveTask(null);\n                }\n              }}\n            />\n          </div>\n          {/* Default Content (Title & Time) */}\n          <div\n            className={`w-full h-full min-h-[60px] px-3 duration-200 ${\n              isHovered ? \"opacity-0 pointer-events-none\" : \"opacity-100\"\n            }`}\n          >\n            <div className=\"flex items-center justify-between w-full h-full min-h-[60px]\">\n              <h1 className=\"text-white\">{currentTask.current?.title}</h1>\n              <h1 className={overtime ? \"text-yellow-600\" : \"text-white\"}>\n                {formatProgress(taskTimer)}\n              </h1>\n            </div>\n          </div>\n        </div>\n      </div>\n      {currentTask.current && (\n        <EditTask\n          open={editTaskOpen}\n          task={currentTask.current}\n          onClick={(v) => setEditTaskOpen(v)}\n          onChange={({ taskData, subtaskData }) => {\n            if (subtaskData) {\n              setSubtasks(subtaskData);\n            }\n            if (taskData) {\n              updateTask(activeTask, {\n                ...taskData,\n              });\n            }\n          }}\n          subtasks={subtasks}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ActiveTask;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1043, "column": 0}, "map": {"version":3,"sources":["file:///home/linus/Development/electron-subtle-todo/apps/next/src/components/ProgressBar.tsx"],"sourcesContent":["const ProgressBar = ({\n  progress,\n  text,\n}: { progress: number; text: string }) => {\n  return (\n    <div className=\"mt-4 flex justify-center items-center space-x-3\">\n      <div className=\"relative flex-1 h-2 rounded-full bg-gray-800 \">\n        <div\n          className=\"absolute h-full rounded-full from-green-400 to-blue-500 bg-gradient-to-r\"\n          style={{ width: `${progress}%` }}\n        />\n      </div>\n      <div className=\"text-sm font-bold text-gray-400\">{text}</div>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n"],"names":[],"mappings":";;;;;AAAA,MAAM,cAAc,CAAC,EACnB,QAAQ,EACR,IAAI,EAC+B;IACnC,qBACE,8VAAC;QAAI,WAAU;;0BACb,8VAAC;gBAAI,WAAU;0BACb,cAAA,8VAAC;oBACC,WAAU;oBACV,OAAO;wBAAE,OAAO,GAAG,SAAS,CAAC,CAAC;oBAAC;;;;;;;;;;;0BAGnC,8VAAC;gBAAI,WAAU;0BAAmC;;;;;;;;;;;;AAGxD;KAfM;uCAiBS","debugId":null}},
    {"offset": {"line": 1097, "column": 0}, "map": {"version":3,"sources":["file:///home/linus/Development/electron-subtle-todo/apps/next/src/components/ActivityBar.tsx"],"sourcesContent":["import { useAppContext } from \"../context/AppContext\";\nimport { useTasks } from \"../context/TaskContext\";\nimport { Cog6ToothIcon } from \"@heroicons/react/24/outline\";\nimport { HomeIcon } from \"@heroicons/react/24/outline\";\nimport { BoltIcon } from \"@heroicons/react/24/outline\";\nimport ProgressBar from \"./ProgressBar\";\n\nconst ActivityBar = () => {\n  const { state, updateState } = useAppContext();\n  const { tasks } = useTasks();\n  const completedTasks = tasks.filter((task) => task.completed);\n  const completedTasksCount = completedTasks.length;\n  const totalTasksCount = tasks.length;\n  const progress = (completedTasksCount / totalTasksCount) * 100;\n  const progressText = `${completedTasksCount}/${totalTasksCount} DONE`;\n\n  return (\n    <div className=\"\">\n      <div className=\"flex justify-between\">\n        <div className=\"flex items-center\">\n          <img src=\"/logo.png\" alt=\"Logo\" className=\"h-8 w-8 mr-2\" />\n          <h1 className=\"text-xl font-bold\">Today</h1>\n        </div>\n        <div className=\"flex space-x-4\">\n          <Cog6ToothIcon\n            className=\"h-6 w-6 text-gray-400 hover:text-gray-600 cursor-pointer\"\n            onClick={() =>\n              updateState({ isSettingsModalOpen: !state.isSettingsModalOpen })\n            }\n          />\n          <HomeIcon className=\"h-6 w-6 text-gray-400 hover:text-gray-600 cursor-pointer\" />\n          <BoltIcon className=\"h-6 w-6 text-gray-400 hover:text-gray-600 cursor-pointer\" />\n        </div>\n      </div>\n      <ProgressBar progress={progress} text={progressText} />\n    </div>\n  );\n};\n\nexport default ActivityBar;\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAEA,MAAM,cAAc;;IAClB,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,gJAAA,CAAA,gBAAa,AAAD;IAC3C,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,iJAAA,CAAA,WAAQ,AAAD;IACzB,MAAM,iBAAiB,MAAM,MAAM,CAAC,CAAC,OAAS,KAAK,SAAS;IAC5D,MAAM,sBAAsB,eAAe,MAAM;IACjD,MAAM,kBAAkB,MAAM,MAAM;IACpC,MAAM,WAAW,AAAC,sBAAsB,kBAAmB;IAC3D,MAAM,eAAe,GAAG,oBAAoB,CAAC,EAAE,gBAAgB,KAAK,CAAC;IAErE,qBACE,8VAAC;QAAI,WAAU;;0BACb,8VAAC;gBAAI,WAAU;;kCACb,8VAAC;wBAAI,WAAU;;0CACb,8VAAC;gCAAI,KAAI;gCAAY,KAAI;gCAAO,WAAU;;;;;;0CAC1C,8VAAC;gCAAG,WAAU;0CAAoB;;;;;;;;;;;;kCAEpC,8VAAC;wBAAI,WAAU;;0CACb,8VAAC,mTAAA,CAAA,gBAAa;gCACZ,WAAU;gCACV,SAAS,IACP,YAAY;wCAAE,qBAAqB,CAAC,MAAM,mBAAmB;oCAAC;;;;;;0CAGlE,8VAAC,ySAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;0CACpB,8VAAC,ySAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;;;;;;;;;;;;;0BAGxB,8VAAC,oJAAA,CAAA,UAAW;gBAAC,UAAU;gBAAU,MAAM;;;;;;;;;;;;AAG7C;GA9BM;;QAC2B,gJAAA,CAAA,gBAAa;QAC1B,iJAAA,CAAA,WAAQ;;;KAFtB;uCAgCS","debugId":null}},
    {"offset": {"line": 1229, "column": 0}, "map": {"version":3,"sources":["file:///home/linus/Development/electron-subtle-todo/apps/next/src/components/AddTask.tsx"],"sourcesContent":["import { useState } from \"react\";\n\nimport { useTasks } from \"../context/TaskContext\";\nimport { ExclamationCircleIcon } from \"@heroicons/react/24/outline\";\nimport { PlusIcon } from \"@heroicons/react/24/solid\";\n\nimport { parseEstimate } from \"../utils/time.utils\";\n\nconst AddTaskComponent = ({\n  className,\n  children,\n}: { className?: string; children?: React.ReactNode }) => {\n  const [addingTask, setAddingTask] = useState(false);\n  const [taskName, setTaskName] = useState(\"\");\n  const [taskEstimateString, setTaskEstimateString] = useState<string>(\"00:05\");\n  const [error, setError] = useState<string | null>(null);\n\n  const { addTask } = useTasks();\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!taskName) {\n      setError(\"Task name is required\");\n      return;\n    }\n\n    const parsedEstimate = parseEstimate(taskEstimateString);\n    if (!parsedEstimate) {\n      setError(\"Invalid estimate format. Use hh:mm or h:mm\");\n      return;\n    }\n\n    addTask({\n      title: taskName,\n      estimate: parsedEstimate * 60,\n      progress: 0,\n      completed: false,\n      created_at: new Date().toISOString(),\n      updated_at: new Date().toISOString(),\n      description: \"\",\n      archived: false,\n      task_list_id: 0,\n      tags: [],\n      priority: \"none\"\n    });\n\n    setTaskName(\"\");\n    setTaskEstimateString(\"00:05\");\n    setError(null);\n  };\n\n  return (\n    <div className={className}>\n      <button\n        type=\"button\"\n        className=\"flex cursor-pointer\"\n        onClick={() => {\n          setAddingTask(!addingTask);\n          setError(null);\n          setTaskName(\"\");\n        }}\n      >\n        <PlusIcon\n          className={`h-6 w-6 inline-block transition-transform duration-200 ${\n            addingTask ? \"rotate-45\" : \"rotate-0\"\n          }`}\n          stroke=\"currentColor\"\n        />\n        {!addingTask && <p className=\"pl-2 font-bold\">ADD TASK</p>}\n        {addingTask && <p className=\"pl-2 font-bold\">CANCEL</p>}\n      </button>\n\n      <div\n        className={`text-red-500 ${error ? \"opacity-100\" : \"opacity-0 h-0\"} transition-opacity duration-200`}\n      >\n        <ExclamationCircleIcon\n          className={`h-5 w-5 inline-block ${error ? \"opacity-100\" : \"opacity-0\"}`}\n        />\n        {error}\n      </div>\n\n      <form onSubmit={handleSubmit}>\n        <div\n          className={`flex flex-col transform transition-all duration-250 ease-in-out gap-2 ${\n            addingTask\n              ? \"opacity-100 translate-y-0 max-h-96\"\n              : \"opacity-0 -translate-y-2 max-h-0 overflow-hidden\"\n          }`}\n        >\n          <div className=\"flex space-x-2 \">\n            <input\n              type=\"text\"\n              value={taskName}\n              onChange={(e) => setTaskName(e.target.value)}\n              placeholder=\"Task\"\n              className={`border ${error ? \"border-red-500\" : \"border-green-400\"} rounded-md p-2 w-full placeholder:text-sm`}\n            />\n            <input\n              type=\"text\"\n              value={taskEstimateString}\n              onChange={(e) => {\n                setTaskEstimateString(e.target.value);\n              }}\n              placeholder=\"hh:mm\"\n              className=\"border border-green-400 rounded-md p-2 w-16 placeholder:text-sm\"\n            />\n          </div>\n          <div className=\"flex justify-end\">\n            <button\n              type=\"submit\"\n              className=\"cursor-pointer text-white bg-gradient-to-r from-green-400 to-blue-500 \n          rounded-full px-8 py-2 self-start text-gray-700 font-bold\"\n            >\n              Add\n            </button>\n          </div>\n        </div>\n      </form>\n      {children}\n    </div>\n  );\n};\n\nexport default AddTaskComponent;\n"],"names":[],"mappings":";;;;AAAA;AAEA;AACA;AACA;AAEA;;;;;;;;AAEA,MAAM,mBAAmB,CAAC,EACxB,SAAS,EACT,QAAQ,EAC2C;;IACnD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,8TAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,8TAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,8TAAA,CAAA,WAAQ,AAAD,EAAU;IACrE,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,8TAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,iJAAA,CAAA,WAAQ,AAAD;IAE3B,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAChB,IAAI,CAAC,UAAU;YACb,SAAS;YACT;QACF;QAEA,MAAM,iBAAiB,CAAA,GAAA,gJAAA,CAAA,gBAAa,AAAD,EAAE;QACrC,IAAI,CAAC,gBAAgB;YACnB,SAAS;YACT;QACF;QAEA,QAAQ;YACN,OAAO;YACP,UAAU,iBAAiB;YAC3B,UAAU;YACV,WAAW;YACX,YAAY,IAAI,OAAO,WAAW;YAClC,YAAY,IAAI,OAAO,WAAW;YAClC,aAAa;YACb,UAAU;YACV,cAAc;YACd,MAAM,EAAE;YACR,UAAU;QACZ;QAEA,YAAY;QACZ,sBAAsB;QACtB,SAAS;IACX;IAEA,qBACE,8VAAC;QAAI,WAAW;;0BACd,8VAAC;gBACC,MAAK;gBACL,WAAU;gBACV,SAAS;oBACP,cAAc,CAAC;oBACf,SAAS;oBACT,YAAY;gBACd;;kCAEA,8VAAC,uSAAA,CAAA,WAAQ;wBACP,WAAW,CAAC,uDAAuD,EACjE,aAAa,cAAc,YAC3B;wBACF,QAAO;;;;;;oBAER,CAAC,4BAAc,8VAAC;wBAAE,WAAU;kCAAiB;;;;;;oBAC7C,4BAAc,8VAAC;wBAAE,WAAU;kCAAiB;;;;;;;;;;;;0BAG/C,8VAAC;gBACC,WAAW,CAAC,aAAa,EAAE,QAAQ,gBAAgB,gBAAgB,gCAAgC,CAAC;;kCAEpG,8VAAC,mUAAA,CAAA,wBAAqB;wBACpB,WAAW,CAAC,qBAAqB,EAAE,QAAQ,gBAAgB,aAAa;;;;;;oBAEzE;;;;;;;0BAGH,8VAAC;gBAAK,UAAU;0BACd,cAAA,8VAAC;oBACC,WAAW,CAAC,sEAAsE,EAChF,aACI,uCACA,oDACJ;;sCAEF,8VAAC;4BAAI,WAAU;;8CACb,8VAAC;oCACC,MAAK;oCACL,OAAO;oCACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;oCAC3C,aAAY;oCACZ,WAAW,CAAC,OAAO,EAAE,QAAQ,mBAAmB,mBAAmB,0CAA0C,CAAC;;;;;;8CAEhH,8VAAC;oCACC,MAAK;oCACL,OAAO;oCACP,UAAU,CAAC;wCACT,sBAAsB,EAAE,MAAM,CAAC,KAAK;oCACtC;oCACA,aAAY;oCACZ,WAAU;;;;;;;;;;;;sCAGd,8VAAC;4BAAI,WAAU;sCACb,cAAA,8VAAC;gCACC,MAAK;gCACL,WAAU;0CAEX;;;;;;;;;;;;;;;;;;;;;;YAMN;;;;;;;AAGP;GAjHM;;QASgB,iJAAA,CAAA,WAAQ;;;KATxB;uCAmHS","debugId":null}},
    {"offset": {"line": 1430, "column": 0}, "map": {"version":3,"sources":["file:///home/linus/Development/electron-subtle-todo/apps/next/src/components/App.tsx"],"sourcesContent":["export const App = ({\n  children,\n  className,\n}: { children: React.ReactNode; className?: string }) => {\n  return (\n    <main id=\"app\" className={`h-screen overflow-hidden select-none ${className ?? \"\"}`}>\n      {children}\n    </main>\n  );\n};\n"],"names":[],"mappings":";;;;;AAAO,MAAM,MAAM,CAAC,EAClB,QAAQ,EACR,SAAS,EACyC;IAClD,qBACE,8VAAC;QAAK,IAAG;QAAM,WAAW,CAAC,qCAAqC,EAAE,aAAa,IAAI;kBAChF;;;;;;AAGP;KATa","debugId":null}},
    {"offset": {"line": 1458, "column": 0}, "map": {"version":3,"sources":["file:///home/linus/Development/electron-subtle-todo/apps/next/src/components/CompletedTask.tsx"],"sourcesContent":["import type { Task } from \"../../../types/task.types\";\nimport { formatProgress } from \"../utils/time.utils\";\nimport { ArchiveBoxArrowDownIcon } from \"@heroicons/react/24/outline\";\n\nconst CompletedTask = ({ task }: { task: Task }) => {\n  return (\n    <div className=\"text-sm px-4 py-2 bg-gray-800 rounded-lg flex justify-between\">\n      <span className=\"text-sm line-through text-gray-500\">{task.title}</span>\n      <h1 className=\"text-white\">{formatProgress(task.progress)}</h1>\n      <ArchiveBoxArrowDownIcon\n        className=\"h-5 w-5 text-gray-400 hover:text-blue-500 transition-colors cursor-pointer\"\n        onClick={() => {\n          // Logic to archive the task\n          console.log(`Archiving task: ${task.id}`);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default CompletedTask;\n"],"names":[],"mappings":";;;;AACA;AACA;;;;AAEA,MAAM,gBAAgB,CAAC,EAAE,IAAI,EAAkB;IAC7C,qBACE,8VAAC;QAAI,WAAU;;0BACb,8VAAC;gBAAK,WAAU;0BAAsC,KAAK,KAAK;;;;;;0BAChE,8VAAC;gBAAG,WAAU;0BAAc,CAAA,GAAA,gJAAA,CAAA,iBAAc,AAAD,EAAE,KAAK,QAAQ;;;;;;0BACxD,8VAAC,uUAAA,CAAA,0BAAuB;gBACtB,WAAU;gBACV,SAAS;oBACP,4BAA4B;oBAC5B,QAAQ,GAAG,CAAC,CAAC,gBAAgB,EAAE,KAAK,EAAE,EAAE;gBAC1C;;;;;;;;;;;;AAIR;KAdM;uCAgBS","debugId":null}},
    {"offset": {"line": 1518, "column": 0}, "map": {"version":3,"sources":["file:///home/linus/Development/electron-subtle-todo/apps/next/src/components/ToggleComponent.tsx"],"sourcesContent":["import { Field, Label, Switch } from \"@headlessui/react\";\n\nconst ToggleComponent = ({\n  text,\n  checked,\n  onChange,\n}: {\n  text: string;\n  checked: boolean;\n  onChange: (checked: boolean) => void;\n}) => {\n  return (\n    <Field className=\"flex items-center justify-between\">\n      <Label className=\"text-gray-400\">{text}</Label>\n      <Switch\n        className=\"group inline-flex h-6 w-11 items-center rounded-full bg-gray-800 transition data-checked:bg-blue-600\"\n        checked={checked}\n        onChange={onChange}\n      >\n        <span className=\"size-4 translate-x-1 rounded-full bg-white transition group-data-checked:translate-x-6\" />\n      </Switch>\n    </Field>\n  );\n};\n\nexport default ToggleComponent;\n"],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;;;AAEA,MAAM,kBAAkB,CAAC,EACvB,IAAI,EACJ,OAAO,EACP,QAAQ,EAKT;IACC,qBACE,8VAAC,+TAAA,CAAA,QAAK;QAAC,WAAU;;0BACf,8VAAC,+TAAA,CAAA,QAAK;gBAAC,WAAU;0BAAiB;;;;;;0BAClC,8VAAC,iUAAA,CAAA,SAAM;gBACL,WAAU;gBACV,SAAS;gBACT,UAAU;0BAEV,cAAA,8VAAC;oBAAK,WAAU;;;;;;;;;;;;;;;;;AAIxB;KArBM;uCAuBS","debugId":null}},
    {"offset": {"line": 1575, "column": 0}, "map": {"version":3,"sources":["file:///home/linus/Development/electron-subtle-todo/apps/next/src/components/SettingsModal.tsx"],"sourcesContent":["import { useAppContext } from \"../context/AppContext\";\nimport {\n  Dialog,\n  DialogPanel,\n  DialogTitle,\n  Field,\n  Label,\n} from \"@headlessui/react\";\nimport { XCircleIcon } from \"@heroicons/react/24/outline\";\nimport ToggleComponent from \"./ToggleComponent\";\n\nconst SettingsModal = ({\n  isOpen,\n  onClick,\n}: {\n  isOpen: boolean;\n  onClick: (v: boolean) => void;\n}) => {\n  const { state, updateAppSettings } = useAppContext();\n\n  const appSettings = state.appSettings;\n\n  const setAlwaysOnTop = (value: boolean) => {\n    updateAppSettings({ ...appSettings, alwaysOnTop: value });\n  };\n\n  const setAutoStart = (value: boolean) => {\n    updateAppSettings({ ...appSettings, autoStart: value });\n  };\n\n  return (\n    <Dialog\n      open={isOpen}\n      as=\"div\"\n      className=\"fixed top-6 left-0 w-screen focus:outline-none flex min-h-full \"\n      onClose={() => onClick(false)}\n    >\n      <DialogPanel\n        transition\n        className=\"\n        w-full max-w-full bg-white/5 p-6 backdrop-blur-2xl \n        duration-300 ease-out data-closed:transform-[scale(95%)] data-closed:opacity-0\"\n      >\n        <div className=\"flex justify-between\">\n          <DialogTitle as=\"h3\" className=\"text-base/7 font-bold text-white\">\n            SETTINGS\n          </DialogTitle>\n          <XCircleIcon\n            className=\"h-6 w-6 text-white text-gray-800 hover:text-gray-500 transition-colors\"\n            onClick={() => onClick(false)}\n          />\n        </div>\n\n        <div className=\"flex flex-col gap-2 border-t border-gray-700 pt-2 mt-2\">\n          <ToggleComponent\n            text=\"Always on top\"\n            checked={appSettings?.alwaysOnTop}\n            onChange={setAlwaysOnTop}\n          />\n          <ToggleComponent\n            text=\"Auto start\"\n            checked={appSettings?.autoStart}\n            onChange={setAutoStart}\n          />\n          <ToggleComponent\n            text=\"Always on top\"\n            checked={appSettings?.alwaysOnTop}\n            onChange={setAlwaysOnTop}\n          />\n          <hr />\n          <h3>Idle Settings</h3>\n          <Field className=\"flex items-center justify-between\">\n            <Label>Idle detection time</Label>\n            <Label>Value</Label>\n          </Field>\n          <ToggleComponent\n            text=\"Resume on activity\"\n            checked={appSettings?.alwaysOnTop}\n            onChange={setAlwaysOnTop}\n          />\n        </div>\n      </DialogPanel>\n    </Dialog>\n  );\n};\nexport default SettingsModal;\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AAAA;AAOA;AACA;;;;;;;AAEA,MAAM,gBAAgB,CAAC,EACrB,MAAM,EACN,OAAO,EAIR;;IACC,MAAM,EAAE,KAAK,EAAE,iBAAiB,EAAE,GAAG,CAAA,GAAA,gJAAA,CAAA,gBAAa,AAAD;IAEjD,MAAM,cAAc,MAAM,WAAW;IAErC,MAAM,iBAAiB,CAAC;QACtB,kBAAkB;YAAE,GAAG,WAAW;YAAE,aAAa;QAAM;IACzD;IAEA,MAAM,eAAe,CAAC;QACpB,kBAAkB;YAAE,GAAG,WAAW;YAAE,WAAW;QAAM;IACvD;IAEA,qBACE,8VAAC,iUAAA,CAAA,SAAM;QACL,MAAM;QACN,IAAG;QACH,WAAU;QACV,SAAS,IAAM,QAAQ;kBAEvB,cAAA,8VAAC,iUAAA,CAAA,cAAW;YACV,UAAU;YACV,WAAU;;8BAIV,8VAAC;oBAAI,WAAU;;sCACb,8VAAC,iUAAA,CAAA,cAAW;4BAAC,IAAG;4BAAK,WAAU;sCAAmC;;;;;;sCAGlE,8VAAC,+SAAA,CAAA,cAAW;4BACV,WAAU;4BACV,SAAS,IAAM,QAAQ;;;;;;;;;;;;8BAI3B,8VAAC;oBAAI,WAAU;;sCACb,8VAAC,wJAAA,CAAA,UAAe;4BACd,MAAK;4BACL,SAAS,aAAa;4BACtB,UAAU;;;;;;sCAEZ,8VAAC,wJAAA,CAAA,UAAe;4BACd,MAAK;4BACL,SAAS,aAAa;4BACtB,UAAU;;;;;;sCAEZ,8VAAC,wJAAA,CAAA,UAAe;4BACd,MAAK;4BACL,SAAS,aAAa;4BACtB,UAAU;;;;;;sCAEZ,8VAAC;;;;;sCACD,8VAAC;sCAAG;;;;;;sCACJ,8VAAC,+TAAA,CAAA,QAAK;4BAAC,WAAU;;8CACf,8VAAC,+TAAA,CAAA,QAAK;8CAAC;;;;;;8CACP,8VAAC,+TAAA,CAAA,QAAK;8CAAC;;;;;;;;;;;;sCAET,8VAAC,wJAAA,CAAA,UAAe;4BACd,MAAK;4BACL,SAAS,aAAa;4BACtB,UAAU;;;;;;;;;;;;;;;;;;;;;;;AAMtB;GAzEM;;QAOiC,gJAAA,CAAA,gBAAa;;;KAP9C;uCA0ES","debugId":null}},
    {"offset": {"line": 1752, "column": 0}, "map": {"version":3,"sources":["file:///home/linus/Development/electron-subtle-todo/apps/next/src/components/TaskContextMenu.tsx"],"sourcesContent":["import { EllipsisVerticalIcon, TrashIcon } from \"@heroicons/react/24/outline\";\n\nimport { Menu, MenuButton, MenuItem, MenuItems } from \"@headlessui/react\";\nimport { useEffect, useRef } from \"react\";\n\nconst TaskContextMenu = ({\n  edit,\n  start,\n  complete,\n  deleteTask,\n  onClose,\n  onClick,\n}: {\n  edit: () => void;\n  start: () => void;\n  complete: () => void;\n  deleteTask: () => void;\n  onClose?: () => void;\n  onClick?: () => void;\n}) => {\n  const wasOpen = useRef(false);\n\n  return (\n    <Menu>\n      {({ open }) => {\n        useEffect(() => {\n          if (wasOpen.current && !open) {\n            onClose?.();\n          }\n          wasOpen.current = open;\n        }, [open, onClose]);\n\n        return (\n          <div>\n            <MenuButton>\n              {\" \"}\n              <EllipsisVerticalIcon\n                className=\"h-5 w-5 text-gray-400 hover:text-gray-100\"\n                onClick={onClick}\n              />\n            </MenuButton>\n            <MenuItems\n              transition\n              className=\"z-50 font-bold w-52 origin-top-right rounded-xl border border-white/5 bg-gray-900 p-2 text-sm/6 text-white transition duration-100 ease-out [--anchor-gap:--spacing(1)] focus:outline-none data-closed:scale-95 data-closed:opacity-0\"\n              anchor=\"bottom end\"\n            >\n              <MenuItem>\n                <button\n                  type=\"button\"\n                  className=\"block data-focus:bg-gray-800 px-2 py-1.5\"\n                  onClick={edit}\n                >\n                  Edit\n                </button>\n              </MenuItem>\n              <MenuItem>\n                <button\n                  type=\"button\"\n                  className=\"block data-focus:bg-gray-800 px-2 py-1.5\"\n                  onClick={start}\n                >\n                  Start\n                </button>\n              </MenuItem>\n              <MenuItem>\n                <button\n                  type=\"button\"\n                  className=\"block data-focus:bg-gray-800 px-2 py-1.5\"\n                  onClick={complete}\n                >\n                  Complete\n                </button>\n              </MenuItem>\n              <hr className=\"border-gray-500 my-2\" />\n              <MenuItem>\n                <div\n                  className=\"flex items-center space-x-2 data-focus:bg-gray-800\"\n                  onClick={deleteTask}\n                >\n                  <TrashIcon className=\"h-5 w-5 text-red-500\" />\n                  <span className=\"block data-focus:bg-gray-800 text-red-500 px-2 py-1.5\">\n                    Delete\n                  </span>\n                </div>\n              </MenuItem>\n            </MenuItems>\n          </div>\n        );\n      }}\n    </Menu>\n  );\n};\n\nexport default TaskContextMenu;\n"],"names":[],"mappings":";;;;AAAA;AAAA;AAEA;AACA;;;;;;AAEA,MAAM,kBAAkB,CAAC,EACvB,IAAI,EACJ,KAAK,EACL,QAAQ,EACR,UAAU,EACV,OAAO,EACP,OAAO,EAQR;;;IACC,MAAM,UAAU,CAAA,GAAA,8TAAA,CAAA,SAAM,AAAD,EAAE;IAEvB,qBACE,8VAAC,6TAAA,CAAA,OAAI;sBACF,CAAC,EAAE,IAAI,EAAE;;YACR,CAAA,GAAA,8TAAA,CAAA,YAAS,AAAD;6CAAE;oBACR,IAAI,QAAQ,OAAO,IAAI,CAAC,MAAM;wBAC5B;oBACF;oBACA,QAAQ,OAAO,GAAG;gBACpB;4CAAG;gBAAC;gBAAM;aAAQ;YAElB,qBACE,8VAAC;;kCACC,8VAAC,6TAAA,CAAA,aAAU;;4BACR;0CACD,8VAAC,iUAAA,CAAA,uBAAoB;gCACnB,WAAU;gCACV,SAAS;;;;;;;;;;;;kCAGb,8VAAC,6TAAA,CAAA,YAAS;wBACR,UAAU;wBACV,WAAU;wBACV,QAAO;;0CAEP,8VAAC,6TAAA,CAAA,WAAQ;0CACP,cAAA,8VAAC;oCACC,MAAK;oCACL,WAAU;oCACV,SAAS;8CACV;;;;;;;;;;;0CAIH,8VAAC,6TAAA,CAAA,WAAQ;0CACP,cAAA,8VAAC;oCACC,MAAK;oCACL,WAAU;oCACV,SAAS;8CACV;;;;;;;;;;;0CAIH,8VAAC,6TAAA,CAAA,WAAQ;0CACP,cAAA,8VAAC;oCACC,MAAK;oCACL,WAAU;oCACV,SAAS;8CACV;;;;;;;;;;;0CAIH,8VAAC;gCAAG,WAAU;;;;;;0CACd,8VAAC,6TAAA,CAAA,WAAQ;0CACP,cAAA,8VAAC;oCACC,WAAU;oCACV,SAAS;;sDAET,8VAAC,2SAAA,CAAA,YAAS;4CAAC,WAAU;;;;;;sDACrB,8VAAC;4CAAK,WAAU;sDAAwD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAQpF;;;;;;AAGN;GAtFM;KAAA;uCAwFS","debugId":null}},
    {"offset": {"line": 1926, "column": 0}, "map": {"version":3,"sources":["file:///home/linus/Development/electron-subtle-todo/apps/next/src/components/Task.tsx"],"sourcesContent":["import { useSortable } from \"@dnd-kit/sortable\";\nimport { CSS } from \"@dnd-kit/utilities\";\n\nimport { useTasks } from \"../context/TaskContext\";\nimport {\n  CheckCircleIcon,\n  DocumentTextIcon,\n  PlayIcon,\n  QueueListIcon,\n} from \"@heroicons/react/24/outline\";\nimport { useEffect, useState } from \"react\";\n\nimport type { Task } from \"../../../types/task.types\";\n\nimport { formatEstimate, formatProgress } from \"../utils/time.utils\";\n\nimport type { Subtask } from \"../../../types/subtask.types\";\nimport EditTask from \"./EditTask\";\nimport SubtasksBlock from \"./SubtasksBlock\";\nimport TaskContextMenu from \"./TaskContextMenu\";\n\nconst TaskComponent = (props: {\n  order: number;\n  task: Task;\n  taskId: number;\n  onChange?: (task: Task) => void;\n  onDelete?: () => void;\n  onComplete?: (taskId: number) => void;\n  onStart?: (taskId: number) => void;\n}) => {\n  const { attributes, listeners, setNodeRef, transform } = useSortable({\n    id: props.taskId,\n  });\n\n  const { order } = props;\n\n  const [isHovered, setIsHovered] = useState(false);\n  const [isCompleting, setIsCompleting] = useState(false);\n  const [editTaskOpen, setEditTaskOpen] = useState(false);\n  const [contextMenuOpen, setContextMenuOpen] = useState(false);\n  const [task, setTask] = useState<Task | null>(null);\n  const [progress, setProgress] = useState(0);\n  const [subtasksList, setSubtasks] = useState<Subtask[] | null>(null);\n\n  const { updateTask, setActiveTask, getSubtasksByTaskId } = useTasks();\n\n  const style = {\n    transform: CSS.Translate.toString(transform),\n  };\n\n  const completeTime = 200;\n\n  const checkIsHovered = (value: boolean) => {\n    setIsHovered(value);\n  };\n\n  const openEditTask = () => {\n    setEditTaskOpen(true);\n    checkIsHovered(false);\n  };\n\n  useEffect(() => {\n    if (props.task) {\n      setTask(props.task);\n      setProgress(props.task.progress);\n\n      getSubtasksByTaskId(props.task.id)\n        .then((tasks) => {\n          if (tasks?.length === 0) {\n            setSubtasks(null);\n          } else {\n            setSubtasks(tasks);\n          }\n        })\n        .catch((err: unknown) => {\n          console.error(err);\n        });\n    }\n  }, [props.task, getSubtasksByTaskId]);\n\n  useEffect(() => {\n    if (!contextMenuOpen) {\n      setIsHovered(false);\n    }\n  }, [contextMenuOpen]);\n\n  if (!task) {\n    return <></>;\n  }\n\n  return (\n    <div\n      ref={setNodeRef}\n      style={style}\n      onMouseLeave={() => checkIsHovered(contextMenuOpen)}\n      onMouseEnter={() => checkIsHovered(!editTaskOpen && true)}\n    >\n      <div\n        className={`bg-gray-800 py-2 px-4 rounded-lg relative transition-all duration-${completeTime} ease-in-out ${\n          isCompleting ? \"-translate-y-10 opacity-0\" : \"\"\n        }`}\n      >\n        <div className=\"flex items-center justify-between w-full font-bold transition-all duration-200 whitespace-nowrap overflow-hidden\">\n          {/* Left section */}\n          <div className=\"flex items-center space-x-2 min-w-0\">\n            <h1 className=\"text-gray-400 text-sm\">{order}</h1>\n\n            <div\n              className={`overflow-hidden transition-all duration-100 ease-in-out z-50 ${\n                isHovered ? \"w-5\" : \"w-0\"\n              }`}\n            >\n              <CheckCircleIcon\n                className=\"h-5 w-5 text-gray-400 hover:text-green-500 transition-colors\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  setIsCompleting(true);\n                  setTimeout(() => {\n                    updateTask(task.id, { completed: true, progress });\n                  }, completeTime);\n                }}\n              />\n            </div>\n\n            <h1 className=\"text-white truncate text-base\">{task?.title}</h1>\n          </div>\n\n          {/* Right section */}\n          <div\n            className={`flex items-center space-x-2 justify-end z-50 transition-opacity duration-100 ${\n              isHovered ? \"opacity-100\" : \"w-0 opacity-0\"\n            }`}\n          >\n            <QueueListIcon\n              className=\"h-5 w-5 text-gray-400 hover:text-blue-500 transition-colors\"\n              onClick={() => {\n                if (subtasksList === null) {\n                  setSubtasks([]);\n                }\n              }}\n            />\n\n            <DocumentTextIcon\n              className=\"h-5 w-5 text-gray-400 hover:text-blue-500 transition-colors\"\n              onClick={openEditTask}\n            />\n            <PlayIcon\n              className=\"h-5 w-5 text-gray-400 hover:text-green-400\"\n              onClick={() => setActiveTask(task.id)}\n            />\n\n            <TaskContextMenu\n              edit={openEditTask}\n              start={() => setActiveTask(task.id)}\n              complete={() => {\n                setIsCompleting(true);\n                setTimeout(() => {\n                  updateTask(task.id, { completed: true, progress });\n                }, completeTime);\n              }}\n              deleteTask={() => props.onDelete?.()}\n              onClose={() => setContextMenuOpen(false)}\n              onClick={() => setContextMenuOpen(true)}\n            />\n          </div>\n        </div>\n        <div className=\"flex justify-between transition-opacity duration-200\">\n          <p className=\"text-gray-400 text-sm\">\n            {formatEstimate(task?.estimate)}\n          </p>\n          <p className=\"text-gray-400 text-sm\">{formatProgress(progress)}</p>\n        </div>\n\n        <SubtasksBlock\n          subtasks={subtasksList ?? []}\n          parentId={task.id}\n          onSubtaskChange={() => {\n            getSubtasksByTaskId(task.id)\n              .then((tasks) => {\n                setSubtasks(tasks);\n              })\n              .catch((err: unknown) => {\n                console.error(err);\n              });\n          }}\n          show={subtasksList !== null}\n        />\n\n        <EditTask\n          open={editTaskOpen}\n          onClick={setEditTaskOpen}\n          task={task}\n          onChange={({ taskData, subtaskData }) => {\n            if (subtaskData) {\n              setSubtasks(subtaskData);\n            }\n            if (taskData) {\n              setTask((prev) => {\n                if (prev) {\n                  return { ...prev, ...taskData };\n                }\n                return null;\n              });\n              props.onChange?.({ ...task, ...taskData });\n              updateTask(task.id, {\n                ...taskData,\n                progress: task.progress,\n                completed: task.completed,\n                active: task.active,\n              });\n            }\n          }}\n          subtasks={subtasksList ?? []}\n        />\n\n        <div\n          className=\"absolute top-0 left-0 w-full h-full z-10\"\n          {...listeners}\n          {...attributes}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default TaskComponent;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2254, "column": 0}, "map": {"version":3,"sources":["file:///home/linus/Development/electron-subtle-todo/apps/next/src/components/TaskList.tsx"],"sourcesContent":["import { useDroppable } from \"@dnd-kit/core\";\n\nconst TaskList = ({\n  children,\n  className,\n  maxHeight,\n}: { children: React.ReactNode; className?: string; maxHeight?: string }) => {\n  const { isOver, setNodeRef } = useDroppable({\n    id: \"task-list\",\n  });\n  const style = {\n    opacity: isOver ? 0.5 : 1,\n  };\n\n  return (\n    <div\n      className={`task-list overflow-y-scroll gap-2 flex flex-col max-h-[${maxHeight}] pr-2\n            [&::-webkit-scrollbar]:w-[2px] \n            [&::-webkit-scrollbar-track]:bg-gray-100\n            [&::-webkit-scrollbar-thumb]:bg-gray-300\n            dark:[&::-webkit-scrollbar-track]:bg-neutral-700\n            dark:[&::-webkit-scrollbar-thumb]:bg-neutral-500 ${className}`}\n      ref={setNodeRef}\n      style={style}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default TaskList;\n"],"names":[],"mappings":";;;;AAAA;;;;AAEA,MAAM,WAAW,CAAC,EAChB,QAAQ,EACR,SAAS,EACT,SAAS,EAC6D;;IACtE,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,4SAAA,CAAA,eAAY,AAAD,EAAE;QAC1C,IAAI;IACN;IACA,MAAM,QAAQ;QACZ,SAAS,SAAS,MAAM;IAC1B;IAEA,qBACE,8VAAC;QACC,WAAW,CAAC,uDAAuD,EAAE,UAAU;;;;;6DAKxB,EAAE,WAAW;QACpE,KAAK;QACL,OAAO;kBAEN;;;;;;AAGP;GA1BM;;QAK2B,4SAAA,CAAA,eAAY;;;KALvC;uCA4BS","debugId":null}},
    {"offset": {"line": 2304, "column": 0}, "map": {"version":3,"sources":["file:///home/linus/Development/electron-subtle-todo/apps/next/src/components/Titlebar.tsx"],"sourcesContent":["import { XMarkIcon } from \"@heroicons/react/24/outline\";\n\nexport const TitlebarComponent = () => {\n  return (\n    <div\n      className=\"top-0 left-0 flex justify-end items-center w-full h-6 bg-gray-800 \"\n    >\n      <div className=\"absolute left-1/2 -translate-x-1/2 text-xs select-none\">\n        subtle\n      </div>\n      <div className=\"mx-4\">\n        <XMarkIcon\n          className=\"h-5 w-5 text-gray-400 hover:text-white transition-colors\"\n          onClick={() => { window.electronAPI.send(\"close-window\", null) }}\n        />\n      </div>\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,oBAAoB;IAC/B,qBACE,8VAAC;QACC,WAAU;;0BAEV,8VAAC;gBAAI,WAAU;0BAAyD;;;;;;0BAGxE,8VAAC;gBAAI,WAAU;0BACb,cAAA,8VAAC,2SAAA,CAAA,YAAS;oBACR,WAAU;oBACV,SAAS;wBAAQ,OAAO,WAAW,CAAC,IAAI,CAAC,gBAAgB;oBAAM;;;;;;;;;;;;;;;;;AAKzE;KAhBa","debugId":null}},
    {"offset": {"line": 2359, "column": 0}, "map": {"version":3,"sources":["file:///home/linus/Development/electron-subtle-todo/apps/next/src/components/LoadingSpinner.tsx"],"sourcesContent":["import React from \"react\";\n\nconst LoadingSpinner = () => {\n  const strokeWidth = 5;\n  const size = 48;\n  const progress = 30;\n  const radius = (size - strokeWidth) / 2;\n  const circumference = 2 * Math.PI * radius;\n  const strokeDashoffset = circumference - (progress / 100) * circumference;\n\n  return (\n    <div className=\"flex items-center justify-center animate-spin\">\n      <svg className=\"transform -rotate-90\" width={size} height={size}>\n        <defs>\n          <linearGradient id=\"grad\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n            <stop offset=\"0%\" stopColor=\"#2b7fff\" />\n            <stop offset=\"100%\" stopColor=\"#05df72\" />\n          </linearGradient>\n        </defs>\n        {/* Background circle */}\n        <circle\n          className=\"text-gray-900\"\n          stroke=\"currentColor\"\n          fill=\"transparent\"\n          strokeWidth={strokeWidth}\n          r={radius}\n          cx={size / 2}\n          cy={size / 2}\n        />\n        {/* Progress circle */}\n        <circle\n          className=\"text-green-400 border border-green-100 transition-all duration-500\"\n          stroke=\"url(#grad)\"\n          fill=\"transparent\"\n          strokeWidth={strokeWidth}\n          strokeDasharray={circumference}\n          strokeDashoffset={strokeDashoffset}\n          strokeLinecap=\"round\"\n          r={radius}\n          cx={size / 2}\n          cy={size / 2}\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n"],"names":[],"mappings":";;;;;AAEA,MAAM,iBAAiB;IACrB,MAAM,cAAc;IACpB,MAAM,OAAO;IACb,MAAM,WAAW;IACjB,MAAM,SAAS,CAAC,OAAO,WAAW,IAAI;IACtC,MAAM,gBAAgB,IAAI,KAAK,EAAE,GAAG;IACpC,MAAM,mBAAmB,gBAAgB,AAAC,WAAW,MAAO;IAE5D,qBACE,8VAAC;QAAI,WAAU;kBACb,cAAA,8VAAC;YAAI,WAAU;YAAuB,OAAO;YAAM,QAAQ;;8BACzD,8VAAC;8BACC,cAAA,8VAAC;wBAAe,IAAG;wBAAO,IAAG;wBAAK,IAAG;wBAAK,IAAG;wBAAO,IAAG;;0CACrD,8VAAC;gCAAK,QAAO;gCAAK,WAAU;;;;;;0CAC5B,8VAAC;gCAAK,QAAO;gCAAO,WAAU;;;;;;;;;;;;;;;;;8BAIlC,8VAAC;oBACC,WAAU;oBACV,QAAO;oBACP,MAAK;oBACL,aAAa;oBACb,GAAG;oBACH,IAAI,OAAO;oBACX,IAAI,OAAO;;;;;;8BAGb,8VAAC;oBACC,WAAU;oBACV,QAAO;oBACP,MAAK;oBACL,aAAa;oBACb,iBAAiB;oBACjB,kBAAkB;oBAClB,eAAc;oBACd,GAAG;oBACH,IAAI,OAAO;oBACX,IAAI,OAAO;;;;;;;;;;;;;;;;;AAKrB;KA3CM;uCA6CS","debugId":null}},
    {"offset": {"line": 2467, "column": 0}, "map": {"version":3,"sources":["file:///home/linus/Development/electron-subtle-todo/apps/next/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { version } from \"../../../package.json\";\nimport React, { useEffect, useState, useLayoutEffect } from \"react\";\n\nimport ActiveTask from \"../components/ActiveTask\";\nimport ActivityBar from \"../components/ActivityBar\";\nimport AddTaskComponent from \"../components/AddTask\";\nimport { App } from \"../components/App\";\nimport CompletedTask from \"../components/CompletedTask\";\nimport SettingsModal from \"../components/SettingsModal\";\nimport Task from \"../components/Task\";\nimport TaskList from \"../components/TaskList\";\nimport { TitlebarComponent } from \"../components/Titlebar\";\n\nimport { useAppContext } from \"../context/AppContext\";\nimport { useTasks } from \"../context/TaskContext\";\nimport { DndContext, type DragEndEvent } from \"@dnd-kit/core\";\nimport {\n  SortableContext,\n  arrayMove,\n  verticalListSortingStrategy,\n} from \"@dnd-kit/sortable\";\n\nimport LoadingSpinner from \"../components/LoadingSpinner\";\n\n\nfunction useWindowSize() {\n  const [size, setSize] = useState([0, 0]);\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.innerWidth, window.innerHeight]);\n    }\n    window.addEventListener(\"resize\", updateSize);\n    updateSize();\n    return () => window.removeEventListener(\"resize\", updateSize);\n  }, []);\n  return size;\n}\n\nexport default function Home() {\n  const { state, updateState } = useAppContext();\n  const taskContext = useTasks();\n  const { tasks, removeTask, setTasks, activeTask } = taskContext;\n  const [settingsOpen, setSettingsOpen] = useState(false);\n  const [isStartup, setIsStartup] = useState(true);\n\n  useEffect(() => {\n    if (window.electronAPI) {\n      console.log(\"Electron API is loaded\");\n    } else {\n      console.log(\"Electron API NOT available\");\n    }\n  }, []);\n\n  useEffect(() => {\n    const startup = async () => {\n      try {\n        setTimeout(() => {\n          // Simulate a delay for startup\n          setIsStartup(false);\n        }, 1000);\n      } catch (error) {\n        console.error(\"Error during database initialization:\", error);\n      }\n    };\n\n    if (isStartup) {\n      startup()\n        .then(() => {\n          console.log(\"Startup completed successfully\");\n        })\n        .catch((error: unknown) => {\n          console.error(\"Error during startup:\", error);\n        });\n    }\n  }, [isStartup]);\n\n  const [width] = useWindowSize();\n  useEffect(() => {\n    if (width < 800) {\n      updateState({ isCompactMode: true });\n    } else {\n      updateState({ isCompactMode: false });\n    }\n  }, [width]);\n\n  useEffect(() => {\n    setSettingsOpen(state.isSettingsModalOpen);\n  }, [state.isSettingsModalOpen]);\n\n  function handleDragEnd(event: DragEndEvent) {\n    const { active, over } = event;\n    if (active.id !== over?.id) {\n      setTasks((tasks) => {\n        const oldIndex = tasks.findIndex((task) => task.id === active.id);\n        const newIndex = tasks.findIndex((task) => task.id === over?.id);\n\n        return arrayMove(tasks, oldIndex, newIndex);\n      });\n    }\n  }\n\n  if (isStartup) {\n    return (\n      <div className=\"flex items-center justify-center h-screen\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  return (\n    <DndContext onDragEnd={handleDragEnd}>\n      <SortableContext items={tasks} strategy={verticalListSortingStrategy}>\n        <App>\n          {!state.isFocusMode && <TitlebarComponent />}\n          <div className=\"flex flex-col h-full gap-4 m-4 \">\n            <ActivityBar />\n            {activeTask && <ActiveTask />}\n            <TaskList maxHeight=\"50vh\">\n              {tasks.length > 0 &&\n                tasks\n                  .filter((task) => !task.completed && !task.active)\n                  .map((task, index) => (\n                    <Task\n                      key={task.id}\n                      order={index + 1}\n                      task={task}\n                      taskId={task.id}\n                      onDelete={() => {\n                        removeTask(task.id);\n                      }}\n                    />\n                  ))}\n            </TaskList>\n            <AddTaskComponent className=\"flex flex-col gap-2\">\n              <div className=\"h-[2px] mx-12 bg-gradient-to-r from-green-400 to-blue-500 border-0 rounded-full\" />\n            </AddTaskComponent>\n\n            <TaskList maxHeight=\"50vh\">\n              {tasks.length > 0 &&\n                tasks\n                  .filter((task) => task.completed)\n                  .map((task) => <CompletedTask key={task.id} task={task} />)}\n            </TaskList>\n            <div className=\"bottom-0 left-0 w-full h-8 bg-[var(--background)] absolute items-center justify-center flex\">\n              <p className=\"text-sm\">{version}</p>\n            </div>\n          </div>\n\n          <SettingsModal\n            isOpen={settingsOpen}\n            onClick={() => {\n              updateState({ isSettingsModalOpen: false });\n            }}\n          />\n        </App>\n      </SortableContext>\n    </DndContext>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}